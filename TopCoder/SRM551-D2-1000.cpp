#include<bits/stdc++.h>
using namespace std;

class ColorfulCupcakesDivTwo
{
	int dp[51][51][51][3][3] , mod = 1e9+7 ;
public:
	int solve(int a , int b , int c , int first , int last)
	{
		if(a+b+c == 0 && last != first) return 1;
		if(a+b+c == 0) return 0;
		if(dp[a][b][c][first][last] != -1) return dp[a][b][c][first][last];
		int ret = 0 ;
		if (a && last != 0)
			ret += solve(a - 1, b, c, first, 0);
		ret %= mod;
		if (b && last != 1)
			ret += solve(a, b - 1, c, first, 1);
		ret%=mod;
		if (c && last != 2)
			ret += solve(a, b, c - 1, first, 2);
		ret%=mod;
		return dp[a][b][c][first][last] = ret;
	}
	int countArrangements(string s)
	{
		memset(dp,-1,sizeof dp);
		int a[3] = {};
		for(auto i : s) a[i-'A']++;
		int ans = 0;
		if(a[0]) ans+= solve(a[0]-1,a[1],a[2],0,0);
		ans%=mod;
		if(a[1]) ans+= solve(a[0],a[1]-1,a[2],1,1);
		ans%=mod;
		if(a[2]) ans+= solve(a[0],a[1],a[2]-1,2,2);
		ans%=mod;
		return ans;
	}
};
// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
bool KawigiEdit_RunTest(int testNum, string p0, bool hasAnswer, int p1)
{
	cout << "Test " << testNum << ": [" << "\"" << p0 << "\"";
	cout << "]" << endl;
	ColorfulCupcakesDivTwo *obj;
	int answer;
	obj = new ColorfulCupcakesDivTwo();
	clock_t startTime = clock();
	answer = obj->countArrangements(p0);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC
			<< " seconds" << endl;
	if (hasAnswer)
	{
		cout << "Desired answer:" << endl;
		cout << "\t" << p1 << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << answer << endl;
	if (hasAnswer)
	{
		res = answer == p1;
	}
	if (!res)
	{
		cout << "DOESN'T MATCH!!!!" << endl;
	}
	else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2)
	{
		cout << "FAIL the timeout" << endl;
		res = false;
	}
	else if (hasAnswer)
	{
		cout << "Match :-)" << endl;
	}
	else
	{
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main()
{
	bool all_right;
	all_right = true;

	string p0;
	int p1;

	{
		// ----- test 0 -----
		p0 = "ABAB";
		p1 = 2;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
	}

	{
		// ----- test 1 -----
		p0 = "ABABA";
		p1 = 0;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
	}

	{
		// ----- test 2 -----
		p0 = "ABC";
		p1 = 6;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
	}

	{
		// ----- test 3 -----
		p0 = "ABABABABABABABABABABABABABABABABABABABABABABABABAB";
		p1 = 2;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
	}

	{
		// ----- test 4 -----
		p0 = "BCBABBACBABABCCCCCAABBAACBBBBCBCAAA";
		p1 = 741380640;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
	}

	if (all_right)
	{
		cout << "You're a stud (at least on the example cases)!" << endl;
	}
	else
	{
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// END KAWIGIEDIT TESTING
